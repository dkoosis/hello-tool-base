steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'
  - '.'
  id: 'Build Docker Image'

# Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest' ]
  id: 'Push to Artifact Registry'

# Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:latest'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - '${_SERVICE_NAME}'
  - '--image'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'
  - '--region'
  - '${_REGION}'
  - '--platform'
  - 'managed'
  - '--ingress=all' # Or 'internal-and-cloud-load-balancing' for more restricted access
  - '--allow-unauthenticated' # For easy testing; for production, use IAM (--no-allow-unauthenticated and set invoker permissions)
  - '--project=$PROJECT_ID'
  # Optional: set min/max instances, memory, CPU, etc.
  # - '--min-instances=0' 
  # - '--max-instances=3'
  # - '--memory=256Mi'
  # - '--cpu=1'
  id: 'Deploy to Cloud Run'

# (Optional) Tag the image with the commit SHA for versioning
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:latest'
  entrypoint: gcloud
  args:
  - 'artifacts'
  - 'docker'
  - 'tags'
  - 'add'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${SHORT_SHA}'
  id: 'Tag Image'

# Store images in Artifact Registry
images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'

substitutions:
  _SERVICE_NAME: 'hello-go-tool'
  _REGION: 'us-central1' # Choose your preferred region
  _ARTIFACT_REGISTRY_REPO: 'my-go-apps' # Replace with your Artifact Registry repository name

options:
  logging: CLOUD_LOGGING_ONLY
